@model Eventis.Models.CRUD.CreateEvent

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control", required = "required", pattern = ".{5,20}", Title = "Title cannot be less than 5 characters and more than 20" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Content, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Content, new { htmlAttributes = new { @class = "form-control", required = "required", Pattern = ".{10,100}", Title = "Title cannot be less than 10 characters and more than 100" } })
                @Html.ValidationMessageFor(model => model.Content, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ImagePath, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ImagePath, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ImagePath, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label for="textBox" class="col-lg-2 control-label md-10">Start Date</label>
            <div class="col-lg-10 md-10">
                <input required="required" class="form-control datepicker" type="text" id="datepicker" name="mydate">
            </div>
        </div>

        <div class="form-group">
            <label for="select" class="col-lg-2 control-label md-10">Category/Genre</label>
            <div class="col-lg-10 md-10">
                <select class="form-control" id="select myGanreDropDown div1" name="mygen" runat="server">
                    <optgroup label="Music">
                        <option>Pop Folk</option>
                        <option>Rock</option>
                        <option>Techno</option>
                    </optgroup>
                    <optgroup label="Movie">
                        <option>Comedy</option>
                        <option>Horror</option>
                        <option>Action</option>
                    </optgroup>
                    <optgroup label="Science">
                        <option>Chemistry</option>
                        <option>Math</option>
                        <option>Physic</option>
                    </optgroup>
                </select>
            </div>
        </div>
       
        <div class="form-group">
            @Html.LabelFor(model => model.CityName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select class="form-control" id="select myDropdown " name="mycity" runat="server" selected="">
                    @foreach (var city in ViewBag.Cities)
                    {
                        <option>@city.Name</option>
                    }
                </select>
                @Html.ValidationMessageFor(model => model.CityName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.HallName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select class="form-control" id="select myDropdown " name="myhall" runat="server" selected="">
                    @foreach (var hall in ViewBag.Halls)
                    {
                        <option>@hall.Name</option>
                    }
                </select>

                @Html.ValidationMessageFor(model => model.HallName, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-success" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "../Home/ListAll")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
